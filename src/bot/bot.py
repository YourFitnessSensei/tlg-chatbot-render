import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from user_map import user_map

logger = logging.getLogger(__name__)

class TelegramBot:
    def __init__(self, token: str):
        self.application = ApplicationBuilder().token(token).build()
        self.user_map = user_map

        self.application.add_handler(CommandHandler("start", self.start))

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        print("üì• –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start")  # –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ handler —Å—Ä–∞–±–æ—Ç–∞–ª
        chat_id = update.effective_chat.id
        self.user_map[chat_id] = True  # –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await context.bot.send_message(chat_id=chat_id, text="üëã –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")

    async def run(self):
        logger.info("üöÄ –°—Ç–∞—Ä—Ç polling Telegram –±–æ—Ç–∞")
        await self.application.run_polling()

    async def shutdown(self):
        await self.application.updater.stop()
        await self.application.stop()
        await self.application.shutdown()
