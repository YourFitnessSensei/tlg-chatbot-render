import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler
from telegram import InlineKeyboardButton, InlineKeyboardMarkup

from user_store import add_user

logger = logging.getLogger(__name__)

class TelegramBot:
    def __init__(self, token: str):
        self.token = token
        self.application = Application.builder().token(token).build()

        self.application.add_handler(CommandHandler("start", self.start))
        self.application.add_handler(CallbackQueryHandler(self.handle_button_click))

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user = update.effective_user
        if user:
            add_user(user.username, update.effective_chat.id)
            keyboard = [[InlineKeyboardButton("üìÖ –°–ª–µ–¥—É—é—â–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", callback_data="next_training")]]
            reply_markup = InlineKeyboardMarkup(keyboard)

            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text="‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.",
                reply_markup=reply_markup
            )
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user.username} –¥–æ–±–∞–≤–ª–µ–Ω –≤ user_store.")
        else:
            logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    async def handle_button_click(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        query = update.callback_query
        if not query:
            return
        await query.answer()

        if query.data == "next_training":
            # —Ç—É—Ç –º—ã –ø–æ–∑–∂–µ –ø–æ–¥—Å—Ç–∞–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ —Å–ª–µ–¥—É—é—â–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            await context.bot.send_message(chat_id=query.message.chat_id, text="üîç –ü–æ–∏—Å–∫ —Å–ª–µ–¥—É—é—â–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏...")

    async def run(self):
        await self.application.initialize()
        await self.application.start()
        # ‚ùå –£–¥–∞–ª–∏–ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏:
        # await self.application.updater.start_polling()
        # await self.application.updater.wait_for_stop()
